{"version":3,"sources":["webpack:///../srcdocs/components/Toggle/toggle.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Toggle","ToggleProps","htmlFor","name","disabled","leftBackgroundColor","rightBackgroundColor","borderColor","knobColor","onToggle","e","console","log","target","checked","of","isMDXComponent"],"mappings":"ggBAQO,IAAMA,EAAe,Q,sNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,gRAEiC,0BAAYC,WAAW,KAAvB,QAFjC,8DAGA,iBAAQ,CACN,GAAM,eADR,eAGA,+DAA8C,0BAAYA,WAAW,KAAvB,UAC9C,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,mFAAwFC,QAAS,CAClIL,QACAH,kBACAS,eACAC,UACAC,WACAC,iBACCR,QAAQ,cACb,qBAAOS,QAAQ,YAAf,aAEE,YAAC,IAAD,CAAQC,KAAK,WAAWV,QAAQ,aAGhC,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,oFAAyFC,QAAS,CACnIL,QACAH,kBACAS,eACAC,UACAC,WACAC,iBACCR,QAAQ,cACb,qBAAOS,QAAQ,YACb,YAAC,IAAD,CAAQC,KAAK,WAAWV,QAAQ,WADlC,gBAKE,mCAAkB,0BAAYC,WAAW,KAAvB,SAAlB,YACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qFAA0FC,QAAS,CACpIL,QACAH,kBACAS,eACAC,UACAC,WACAC,iBACCR,QAAQ,cACb,qBAAOS,QAAQ,aAAf,sBACA,YAAC,IAAD,CAAQC,KAAK,YAAYV,QAAQ,YAE/B,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,sFAA2FC,QAAS,CACrIL,QACAH,kBACAS,eACAC,UACAC,WACAC,iBACCR,QAAQ,cACb,YAAC,IAAD,CAAQU,KAAK,YAAYV,QAAQ,WACjC,qBAAOS,QAAQ,aAAf,wBAEE,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYP,WAAY,EAAGC,OAAQ,0FAA+FC,QAAS,CACzIL,QACAH,kBACAS,eACAC,UACAC,WACAC,iBACCR,QAAQ,cACb,qBAAOS,QAAQ,YAAf,WAEE,YAAC,IAAD,CAAQC,KAAK,WAAWC,UAAQ,EAACX,QAAQ,aAGzC,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYE,WAAY,EAAGC,OAAQ,iRAA8RC,QAAS,CACxUL,QACAH,kBACAS,eACAC,UACAC,WACAC,iBACCR,QAAQ,cACb,qBAAOS,QAAQ,YACb,YAAC,IAAD,CAAQG,oBAAoB,SAASC,qBAAqB,QAAQC,YAAY,SAASC,UAAU,QAAQL,KAAK,WAAWM,SAAU,SAAAC,GAAC,OAAIC,QAAQC,IAAI,WAAYF,EAAEG,OAAOC,UAAUrB,QAAQ,WAD7L,eAKE,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOsB,GAAId,IAAaR,QAAQ,W,6MAKpCH,EAAW0B,gBAAiB","file":"component---srcdocs-components-toggle-toggle-mdx-9299f5eef9c8f4577218.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/giovambattistafazioli/Lavori/Github/react-toggle/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Toggle, { ToggleProps } from '../../../src/components/Toggle';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"toggle\"\n    }}>{`Toggle`}</h1>\n    <p>{`The Toggle component is an useful replacement to the standar input checkbox component.\nAnyway, remember that the toggle component is an extension of the input checkbox. So, you can use it inside a form as well.\nIn fact, remember to use the props `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` when you're using multiple toggle component in your view.`}</p>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <p>{`You can wrap the Toggle component with `}<inlineCode parentName=\"p\">{`label`}</inlineCode></p>\n    <Playground __position={0} __code={'<label htmlFor=\\\"toggle-1\\\">\\n  Left label\\n  <Toggle name=\\\"toggle-1\\\" />\\n</label>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleProps\n    }} mdxType=\"Playground\">\n  <label htmlFor=\"toggle-1\">\n    Left label\n    <Toggle name=\"toggle-1\" mdxType=\"Toggle\" />\n  </label>\n    </Playground>\n    <Playground __position={1} __code={'<label htmlFor=\\\"toggle-2\\\">\\n  <Toggle name=\\\"toggle-2\\\" />\\n  Right label\\n</label>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleProps\n    }} mdxType=\"Playground\">\n  <label htmlFor=\"toggle-2\">\n    <Toggle name=\"toggle-2\" mdxType=\"Toggle\" />\n    Right label\n  </label>\n    </Playground>\n    <p>{`Or set any `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` outside`}</p>\n    <Playground __position={2} __code={'<label htmlFor=\\\"toggle-1a\\\">Left label outside</label>\\n<Toggle name=\\\"toggle-1a\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleProps\n    }} mdxType=\"Playground\">\n  <label htmlFor=\"toggle-1a\">Left label outside</label>\n  <Toggle name=\"toggle-1a\" mdxType=\"Toggle\" />\n    </Playground>\n    <Playground __position={3} __code={'<Toggle name=\\\"toggle-2a\\\" />\\n<label htmlFor=\\\"toggle-2a\\\">Right label outside</label>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleProps\n    }} mdxType=\"Playground\">\n  <Toggle name=\"toggle-2a\" mdxType=\"Toggle\" />\n  <label htmlFor=\"toggle-2a\">Right label outside</label>\n    </Playground>\n    <h3 {...{\n      \"id\": \"disable\"\n    }}>{`Disable`}</h3>\n    <Playground __position={4} __code={'<label htmlFor=\\\"toggle-3\\\">\\n  Disabled\\n  <Toggle name=\\\"toggle-3\\\" disabled />\\n</label>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleProps\n    }} mdxType=\"Playground\">\n  <label htmlFor=\"toggle-3\">\n    Disabled\n    <Toggle name=\"toggle-3\" disabled mdxType=\"Toggle\" />\n  </label>\n    </Playground>\n    <h3 {...{\n      \"id\": \"appearance\"\n    }}>{`Appearance`}</h3>\n    <Playground __position={5} __code={'<label htmlFor=\\\"toggle-4\\\">\\n  <Toggle\\n    leftBackgroundColor=\\\"tomato\\\"\\n    rightBackgroundColor=\\\"green\\\"\\n    borderColor=\\\"tomato\\\"\\n    knobColor=\\\"white\\\"\\n    name=\\\"toggle-4\\\"\\n    onToggle={e => console.log(\\'onToggle\\', e.target.checked)}\\n  />\\n  Appearance\\n</label>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Toggle,\n      ToggleProps\n    }} mdxType=\"Playground\">\n  <label htmlFor=\"toggle-4\">\n    <Toggle leftBackgroundColor=\"tomato\" rightBackgroundColor=\"green\" borderColor=\"tomato\" knobColor=\"white\" name=\"toggle-4\" onToggle={e => console.log(\"onToggle\", e.target.checked)} mdxType=\"Toggle\" />\n    Appearance\n  </label>\n    </Playground>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={ToggleProps} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}